"use strict";(self.webpackChunklzdocs=self.webpackChunklzdocs||[]).push([[539],{4703:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"ioi/c++/for loops","title":"for loops","description":"- expression_1 is used for intializing variables which are generally used for controlling the terminating flag for the loop.","source":"@site/docs/ioi/c++/for loops.md","sourceDirName":"ioi/c++","slug":"/ioi/c++/for loops","permalink":"/lazydocs/docs/ioi/c++/for loops","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ioi/c++/for loops.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Data Types in C++","permalink":"/lazydocs/docs/ioi/c++/data types"}}');var t=n(4848),i=n(8453);const r={},a=void 0,c={},l=[];function d(e){const o={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-cpp",children:"for ( <expression_1> ; <expression_2> ; <expression_3> )\r\n    <statement>\n"})}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:"expression_1 is used for intializing variables which are generally used for controlling the terminating flag for the loop."}),"\n",(0,t.jsx)(o.li,{children:"expression_2 is used to check for the terminating condition. If this evaluates to false, then the loop is terminated."}),"\n",(0,t.jsx)(o.li,{children:"expression_3 is generally used to update the flags/variables."}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"sample loop"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-cpp",children:"for(int i = 0; i < 10; i++) {\r\n    ...\r\n}\n"})})]})}function p(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>a});var s=n(6540);const t={},i=s.createContext(t);function r(e){const o=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:o},e.children)}}}]);